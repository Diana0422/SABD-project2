version: '2.2'
services:
  ## SERVICE1: APACHE KAFKA + ZOOKEEPER
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092' # internal
      - '29092:29092' # localhost
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CREATE_TOPICS= 'input-records:1:1'
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:29092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper

  ## SENSOR PRODUCER APP -----------------------------------------
  publisher:
#    image: diana0422/publisher
    container_name: publisher
    depends_on:
      - kafka
    environment:
      TOPIC: input-records
      ENVIRONMENT: local
      INTERNAL_KAFKA_ADDR: 'kafka:9092'
    build:
      context: ./sabd2-kafka
      dockerfile: publisher.Dockerfile

  ## RESULT CONSUMER APP ----------------------------------------
  consumer:
    # image: diana0422/consumer
    container_name: consumer
    build:
      context: sabd2-kafka/consumer
      dockerfile: consumer.Dockerfile
    environment:
      ENVIRONMENT: local
      INTERNAL_KAFKA_ADDR: 'kafka:9092'
    volumes:
      - "./Results:/output"
    depends_on:
      - publisher
      - jobmanager

  # SERVICE2: APACHE FLINK -------------------------------------
  jobmanager:
    image: flink:latest
    container_name: jobmanager
    ports:
      - '8081:8081' #Web UI
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        state.backend.latency-track.keyed-state-enabled: true
        metrics.reporters: prom
        metrics.reporter.prom.class: org.apache.flink.metrics.prometheus.PrometheusReporter
        metrics.reporter.prom.port: 9999
    volumes:
      - ./sabd2-flink/target:/opt/flink/sensor-app/

  taskmanager:
    image: flink:latest
    command: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 2
        metrics.reporters: prom
        metrics.reporter.prom.class: org.apache.flink.metrics.prometheus.PrometheusReporter
        metrics.reporter.prom.port: 9999
    depends_on:
      - jobmanager

  prometheus:
    image: prom/prometheus:v2.33.3
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      # - ./prometheus/flink.rules.yml:/etc/prometheus/flink.rules.yml

    # SERVICE4: REDIS ---------------------------------------------
  redis:
    image: redis:latest
    container_name: redis-cache
    ports:
      - '6379:6379'

#   SERVICE5: GRAFANA -------------------------------------------
  grafana:
    build:
      context: ./grafana
    container_name: grafana
    ports:
      - '8000:3000'
    volumes:
      - grafana-data:/var/lib/grafana

volumes:
  grafana-data:
    external: false